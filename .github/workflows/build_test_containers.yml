name: Build & publish Copycord testing containers

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag (leave blank to auto-derive from branch name)'
        required: false
        default: ''

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive lower-case owner
        id: vars
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Compute tag
        id: tag
        shell: bash
        run: |
          IN_TAG='${{ github.event.inputs.tag }}'
          BRANCH='${{ github.ref_name }}'

          if [ -n "$IN_TAG" ]; then
            TAG_SRC="$IN_TAG"
          else
            TAG_SRC="$BRANCH"
          fi

          TAG=$(echo "$TAG_SRC" \
            | tr '[:upper:]' '[:lower:]' \
            | sed -E 's|[^a-z0-9._-]|-|g' \
            | sed -E 's/^-+//; s/-+$//')

          # enforce 128-char docker tag limit
          if [ ${#TAG} -gt 128 ]; then TAG="${TAG:0:128}"; fi

          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Using tag: $TAG"

      - name: Build & push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./code/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ steps.vars.outputs.owner }}/copycord:${{ steps.tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
